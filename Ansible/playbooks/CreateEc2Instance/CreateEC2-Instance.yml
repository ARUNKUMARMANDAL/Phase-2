---
- hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group: ansible-aws
    image: ami-03291866
    keypair: jenkins
    region: us-east-2
    count: 1

  tasks:
    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: The webservers security group
        region: "{{ region }}"
        aws_access_key: AKIA4AVHEKNHJIWLZJMM
        aws_secret_key: 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
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
    - name: Launch the new EC2 Instance
      ec2:
        aws_access_key: AKIA4AVHEKNHJIWLZJMM
        aws_secret_key: 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
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{count}}"
      register: ec2
    - name: Add the newly created host so that we can further contact it
      local_action: lineinfile
                    dest="./hosts"
                    regexp={{ item.public_ip }}
                    insertafter="[webserver]" line={{ item.public_ip }}
      with_items: "{{ ec2.instances }}"
    - name: Add tag to Instance(s)
      ec2_tag:
        aws_access_key: AKIA4AVHEKNHJIWLZJMM
        aws_secret_key: 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
        resource: "{{ item.id }}"
        region: "{{ region }}"
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: webserver
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        state: started
      with_items: "{{ ec2.instances }}"
